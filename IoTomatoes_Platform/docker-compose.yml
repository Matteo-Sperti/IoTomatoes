version: '3.4'

networks:
  mynet:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.0.0/16
          ip_range: 172.16.0.0/24
          gateway: 172.16.0.254

services:
  load_balancer:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./index/:/var/www/data/
    ports:
      - "8080:80"
    networks:
      - mynet

  service_catalog:
    image: service_catalog
    build:
      context: .
      dockerfile: ./ServiceCatalog/Dockerfile
    depends_on:
      - load_balancer
    networks:
      mynet:
        ipv4_address: "172.16.0.2"

  resource_catalog:
    image: resource_catalog
    build:
      context: .
      dockerfile: ./ResourceCatalog/Dockerfile
    depends_on:
      - load_balancer
      - service_catalog
    networks:
      mynet:
        ipv4_address: "172.16.0.3"

  telegram_bot:
    image: telegram_bot
    build:
      context: .
      dockerfile: ./TelegramBot/Dockerfile
    depends_on:
      - resource_catalog
    networks:
      - mynet

  smart_irrigation:
    image: smart_irrigation
    build:
      context: .
      dockerfile: ./SmartIrrigation/Dockerfile
    depends_on:
      - resource_catalog
    networks:
      - mynet

  smart_lighting:
    image: smart_lighting
    build:
      context: .
      dockerfile: ./SmartLighting/Dockerfile
    depends_on:
      - resource_catalog
    networks:
      - mynet

  fault_detection:
    image: fault_detection
    build:
      context: .
      dockerfile: ./FaultDetection/Dockerfile
    depends_on:
      - resource_catalog
    networks:
      - mynet

  consumption_manager:
    image: consumption_manager
    build:
      context: .
      dockerfile: ./ConsumptionManager/Dockerfile
    depends_on:
      - resource_catalog
    networks:
      - mynet

  weather_forecast:
    image: weather_forecast
    build:
      context: .
      dockerfile: ./WeatherForecast/Dockerfile
    depends_on:
      - resource_catalog
    networks:
      - mynet
  
  localization:
    image: localization
    build:
      context: .
      dockerfile: ./Localization/Dockerfile
    depends_on:
      - resource_catalog
    networks:
      - mynet

  mongodb_connector:
    image: mongodb_connector
    build:
      context: .
      dockerfile: ./MongoDBConnector/Dockerfile
    depends_on:
      - resource_catalog
    networks:
      - mynet

  data_visualization:
    image: data_visualization
    build:
      context: .
      dockerfile: ./DataVisualizer/Dockerfile
    depends_on:
      - resource_catalog
    networks:
      - mynet